{"ast":null,"code":"var _jsxFileName = \"/Users/bethel/Documents/Github Projects/react-hooks/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\n\nconst inputElement = () => {\n  const {\n    0: inputText,\n    1: setInputText\n  } = useState(\"\");\n  const {\n    0: historyList,\n    1: setHistoryList\n  } = useState([]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    onChange: e => {\n      setInputText(e.target.value); //updates internal state with new value in text field\n\n      setHistoryList([...historyList, e.target.value]); //history of state changes\n    },\n    placeholder: \"Enter some text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), inputText, __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, historyList.map(rec => {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, rec);\n  })));\n};\n\nexport default inputElement;","map":{"version":3,"sources":["/Users/bethel/Documents/Github Projects/react-hooks/pages/index.js"],"names":["React","useState","inputElement","inputText","setInputText","historyList","setHistoryList","e","target","value","map","rec"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAA,OAACI,WAAD;AAAA,OAAcC;AAAd,MAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAEM,CAAC,IAAI;AACbH,MAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,CADa,CACiB;;AAC9BH,MAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBE,CAAC,CAACC,MAAF,CAASC,KAA1B,CAAD,CAAd,CAFa,CAEqC;AACnD,KAJH;AAKE,IAAA,WAAW,EAAC,iBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASGN,SATH,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,WAAW,CAACK,GAAZ,CAAgBC,GAAG,IAAI;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,GAAN,CAAP;AACD,GAFA,CADH,CAbF,CADF;AAqBD,CAxBD;;AA0BA,eAAeT,YAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst inputElement = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [historyList, setHistoryList] = useState([]);\n  return (\n    <div>\n      <input\n        onChange={e => {\n          setInputText(e.target.value); //updates internal state with new value in text field\n          setHistoryList([...historyList, e.target.value]); //history of state changes\n        }}\n        placeholder=\"Enter some text\"\n      />\n      <br />\n      {inputText}\n      {/*reflects value in state */}\n      <hr />\n      <br />\n      <ul>\n        {historyList.map(rec => {\n          return <div>{rec}</div>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default inputElement;\n"]},"metadata":{},"sourceType":"module"}